---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  generate-config:
    desc: Generate Talos configuration
    dir: '{{.TALHELPER_DIR}}'
    cmd: talhelper genconfig
    preconditions:
      - test -f {{.TALHELPER_DIR}}/talconfig.yaml
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - which talhelper

  apply-node:
    desc: Apply Talos config to a node [IP=required, INSECURE=false]
    dir: '{{.TALHELPER_DIR}}'
    cmd: talhelper gencommand apply --node {{.IP}} --extra-flags '--mode={{.MODE}} --timeout={{.TIMEOUT}} {{if eq .INSECURE "true"}}--insecure{{end}}' | bash
    vars:
      MODE: '{{.MODE | default "auto"}}'
      TIMEOUT: '{{.TIMEOUT | default "10m"}}'
      INSECURE: '{{.INSECURE | default "false"}}'
    requires:
      vars: [IP]
    preconditions:
      - sh: '{{if eq .INSECURE "true"}}exit 0{{else}}talosctl --nodes {{.IP}} get machineconfig{{end}}'
        msg: "Node {{.IP}} is not reachable or not configured. Use INSECURE=true for first-time setup."
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl yq

  add-node:
    desc: Add a new node to the cluster [IP=required]
    dir: '{{.TALHELPER_DIR}}'
    vars:
      IP: '{{.IP}}'
    requires:
      vars: [IP]
    preconditions:
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl kubectl
      - sh: 'grep -q "{{.IP}}" {{.TALHELPER_DIR}}/talconfig.yaml'
        msg: "Node {{.IP}} not found in talconfig.yaml. Add it to the config first."
    cmds:
      - echo "Adding node {{.IP}} to cluster..."
      - task: generate-config
      - echo "Applying configuration to node {{.IP}}..."
      - task: apply-node
        vars:
          IP: '{{.IP}}'
          INSECURE: 'true'
      - echo "Waiting for node to boot and join cluster (60 seconds)..."
      - sleep 60
      - echo "Verifying node status..."
      - kubectl get nodes -o wide | grep -E "NAME|{{.IP}}"
      - echo "Node {{.IP}} successfully added to cluster!"

  upgrade-node:
    desc: Upgrade Talos on a single node [IP=required]
    dir: '{{.TALHELPER_DIR}}'
    cmd: talhelper gencommand upgrade --node {{.IP}} --extra-flags "--image='{{.TALOS_IMAGE}}:{{.TALOS_VERSION}}' --timeout=120m" | bash
    vars:
      TALOS_IMAGE:
        sh: yq '.nodes[] | select(.ipAddress == "{{.IP}}") | .talosImageURL' {{.TALHELPER_DIR}}/talconfig.yaml
      TALOS_VERSION:
        sh: yq '.talosVersion' {{.TALHELPER_DIR}}/talconfig.yaml
    requires:
      vars: [IP]
    preconditions:
      - talosctl --nodes {{.IP}} get machineconfig
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which kubectl talhelper talosctl yq

  upgrade-k8s:
    desc: Upgrade Kubernetes
    dir: '{{.TALHELPER_DIR}}'
    cmd: talhelper gencommand upgrade-k8s --extra-flags "--to '{{.KUBERNETES_VERSION}}'" | bash
    vars:
      KUBERNETES_VERSION:
        sh: yq '.kubernetesVersion' {{.TALHELPER_DIR}}/talconfig.yaml
    preconditions:
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl yq

  upgrade-talos:
    desc: Upgrade Talos on all nodes
    dir: '{{.TALHELPER_DIR}}'
    cmd: talhelper gencommand upgrade --extra-flags "--preserve --wait --timeout=30m" | bash
    preconditions:
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl yq

  reset:
    desc: Resets nodes back to maintenance mode
    dir: '{{.TALHELPER_DIR}}'
    prompt: This will destroy your cluster and reset the nodes back to maintenance mode... continue?
    cmd: talhelper gencommand reset --extra-flags="--reboot {{- if eq .CLI_FORCE false }} --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL{{ end }} --graceful=false --wait=false" | bash
    preconditions:
      - which talhelper
