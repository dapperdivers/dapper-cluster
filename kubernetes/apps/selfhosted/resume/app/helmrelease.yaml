---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app resume
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      resume:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/dapperdivers/developer-portfolio
              tag:  latest@sha256:65a75f3c442ecf1eaaec659b63688ea98bf89730dfb6b16765084d2f889e93cb
            env:
              ALLOWED_DOMAINS: ${SECRET_DOMAIN_PERSONAL}
              VITE_SITE_MAIN_URL: https://www.${SECRET_DOMAIN_PERSONAL}
              VITE_SITE_STORYBOOK_URL: https://${SECRET_DOMAIN_PERSONAL}/storybook
              VITE_SITE_DOCS_URL: https://${SECRET_DOMAIN_PERSONAL}/docs
              VITE_SITE_NAVIGATOR_ENABLED: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: 3001
                  initialDelaySeconds: 0
                  periodSeconds: 60
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 50m
                memory: 1Gi
              limits:
                memory: 5Gi
          storybook:
            image:
              repository: ghcr.io/dapperdivers/developer-portfolio-storybook
              tag: latest@sha256:e3fa6427846ce95674419ae62a08482db80d5748e896985caa2b51b83f9dd50c
            env:
              STORYBOOK_HOST: 0.0.0.0
              STORYBOOK_PORT: 6006
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            probes:
              liveness: &storybookProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 6006
                  initialDelaySeconds: 0
                  periodSeconds: 60
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *storybookProbes
            resources:
              requests:
                cpu: 25m
                memory: 512Mi
              limits:
                memory: 2Gi
          docs:
            image:
              repository: ghcr.io/dapperdivers/developer-portfolio-docs
              tag: latest@sha256:065303034da4c0414dc6e939f3048bf17928ea6c8f3c335acb87d46768ae9422
            env:
              DOCS_HOST: 0.0.0.0
              DOCS_PORT: 4000
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            probes:
              liveness: &docsProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 4000
                  initialDelaySeconds: 0
                  periodSeconds: 60
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *docsProbes
            resources:
              requests:
                cpu: 25m
                memory: 512Mi
              limits:
                memory: 2Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: 3001
          storybook:
            port: 6006
          docs:
            port: 4000
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN_PERSONAL}"
        className: external
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_PERSONAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: "www.${SECRET_DOMAIN_PERSONAL}"
            paths:
              - path: /docs
                service:
                  identifier: app
                  port: docs
              - path: /storybook
                service:
                  identifier: app
                  port: storybook
              - path: /
                service:
                  identifier: app
                  port: http
          - host: "${SECRET_DOMAIN_PERSONAL}"
            paths:
              - path: /docs
                service:
                  identifier: app
                  port: docs
              - path: /storybook
                service:
                  identifier: app
                  port: storybook
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN_PERSONAL/./-}-tls
