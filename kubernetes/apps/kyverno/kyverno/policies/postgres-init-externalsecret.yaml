---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/kyverno.io/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: postgres-init-externalsecret
  annotations:
    policies.kyverno.io/title: Postgres Init ExternalSecret Generation
    policies.kyverno.io/subject: HelmRelease, ExternalSecret
    policies.kyverno.io/description: >-
      This policy automatically generates an ExternalSecret for postgres-init
      when a HelmRelease has the postgres-init.home.arpa/enabled annotation.
      The ExternalSecret pulls credentials from Infisical based on annotation
      values and creates the necessary environment variables for the postgres-init
      container. The generated ExternalSecret is automatically cleaned up when
      the source HelmRelease is deleted.
spec:
  rules:
    - name: generate-postgres-init-externalsecret
      match:
        any:
          - resources:
              kinds: [HelmRelease]
              annotations:
                postgres-init.home.arpa/enabled: "true"
      # Ensure required annotations are present
      preconditions:
        all:
          - key: "{{ request.object.metadata.annotations.\"postgres-init.home.arpa/user-key\" || '' }}"
            operator: NotEquals
            value: ""
          - key: "{{ request.object.metadata.annotations.\"postgres-init.home.arpa/pass-key\" || '' }}"
            operator: NotEquals
            value: ""
      generate:
        apiVersion: external-secrets.io/v1
        kind: ExternalSecret
        name: "{{ request.object.metadata.name }}-postgres-init"
        namespace: "{{ request.object.metadata.namespace }}"
        synchronize: true
        data:
          spec:
            secretStoreRef:
              kind: ClusterSecretStore
              name: infisical
            target:
              name: "{{ request.object.metadata.name }}-postgres-init"
              template:
                engineVersion: v2
                data:
                  INIT_POSTGRES_HOST: postgres-rw.database.svc.cluster.local
                  INIT_POSTGRES_SUPER_USER: "{{ '{{' }} .POSTGRES_SUPER_USER {{ '}}' }}"
                  INIT_POSTGRES_SUPER_PASS: "{{ '{{' }} .POSTGRES_SUPER_PASS {{ '}}' }}"
                  INIT_POSTGRES_PORT: "5432"
                  INIT_POSTGRES_DBNAME: "{{ request.object.metadata.annotations.\"postgres-init.home.arpa/dbname\" || request.object.metadata.name }}"
                  INIT_POSTGRES_USER: "{{ '{{' }} .{{ request.object.metadata.annotations.\"postgres-init.home.arpa/user-key\" }} {{ '}}' }}"
                  INIT_POSTGRES_PASS: "{{ '{{' }} .{{ request.object.metadata.annotations.\"postgres-init.home.arpa/pass-key\" }} {{ '}}' }}"
            dataFrom:
              - find:
                  path: POSTGRES_SUPER_USER
              - find:
                  path: POSTGRES_SUPER_PASS
              - find:
                  name:
                    regexp: "^{{ request.object.metadata.annotations.\"postgres-init.home.arpa/user-key\" }}$"
              - find:
                  name:
                    regexp: "^{{ request.object.metadata.annotations.\"postgres-init.home.arpa/pass-key\" }}$"
