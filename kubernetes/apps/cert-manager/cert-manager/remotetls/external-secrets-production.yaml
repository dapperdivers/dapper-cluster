---
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: ${SECRET_DOMAIN/./-}-tls
  labels:
    controller.cert-manager.io/fao: "true"
  annotations:
    cert-manager.io/alt-names: '*.${SECRET_DOMAIN},${SECRET_DOMAIN}'
    cert-manager.io/certificate-name: "${SECRET_DOMAIN/./-}"
    cert-manager.io/common-name: ${SECRET_DOMAIN}
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
    secrets.infisical.com/auto-reload: "true"
spec:
  hostAPI: https://app.infisical.com/api
  resyncInterval: 3600
  authentication:
    universalAuth:
      credentialsRef:
        secretName: infiscal-auth-secret
        secretNamespace: external-secrets
      secretsScope:
        projectSlug: homelab-p-iqd # <-- project slug
        envSlug: prod # "dev", "staging", "prod", etc..
        secretsPath: "/Certificates/${SECRET_DOMAIN/./-}"
  managedKubeSecretReferences:
    - secretName: ${SECRET_DOMAIN/./-}-tls
      secretNamespace: cert-manager
      creationPolicy: "Orphan"
      template:
        includeAllSecrets: true

---
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: ${SECRET_DOMAIN_MEDIA/./-}-tls
  labels:
    controller.cert-manager.io/fao: "true"
  annotations:
    cert-manager.io/alt-names: '*.${SECRET_DOMAIN_MEDIA},${SECRET_DOMAIN_MEDIA}'
    cert-manager.io/certificate-name: "${SECRET_DOMAIN_MEDIA/./-}"
    cert-manager.io/common-name: ${SECRET_DOMAIN_MEDIA}
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
    secrets.infisical.com/auto-reload: "true"
spec:
  hostAPI: https://app.infisical.com/api
  resyncInterval: 3600
  authentication:
    universalAuth:
      credentialsRef:
        secretName: infiscal-auth-secret
        secretNamespace: external-secrets
      secretsScope:
        projectSlug: homelab-p-iqd # <-- project slug
        envSlug: prod # "dev", "staging", "prod", etc..
        secretsPath: "/Certificates/${SECRET_DOMAIN_MEDIA/./-}"
  managedKubeSecretReferences:
    - secretName: ${SECRET_DOMAIN_MEDIA/./-}-tls
      secretNamespace: cert-manager
      creationPolicy: "Orphan"
      template:
        includeAllSecrets: true

---
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: ${SECRET_DOMAIN_PERSONAL/./-}-tls
  labels:
    controller.cert-manager.io/fao: "true"
  annotations:
    cert-manager.io/alt-names: '*.${SECRET_DOMAIN_PERSONAL},${SECRET_DOMAIN_PERSONAL}'
    cert-manager.io/certificate-name: "${SECRET_DOMAIN_PERSONAL/./-}"
    cert-manager.io/common-name: ${SECRET_DOMAIN_PERSONAL}
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
    secrets.infisical.com/auto-reload: "true"
spec:
  hostAPI: https://app.infisical.com/api
  resyncInterval: 3600
  authentication:
    universalAuth:
      credentialsRef:
        secretName: infiscal-auth-secret
        secretNamespace: external-secrets
      secretsScope:
        projectSlug: homelab-p-iqd # <-- project slug
        envSlug: prod # "dev", "staging", "prod", etc..
        secretsPath: "/Certificates/${SECRET_DOMAIN_PERSONAL/./-}"
  managedKubeSecretReferences:
    - secretName: ${SECRET_DOMAIN_PERSONAL/./-}-tls
      secretNamespace: cert-manager
      creationPolicy: "Orphan"
      template:
        includeAllSecrets: true
---
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: ${SECRET_DOMAIN_DIVING/./-}-tls
  labels:
    controller.cert-manager.io/fao: "true"
  annotations:
    cert-manager.io/alt-names: '*.${SECRET_DOMAIN_DIVING},${SECRET_DOMAIN_DIVING}'
    cert-manager.io/certificate-name: "${SECRET_DOMAIN_DIVING/./-}"
    cert-manager.io/common-name: ${SECRET_DOMAIN_DIVING}
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
    secrets.infisical.com/auto-reload: "true"
spec:
  hostAPI: https://app.infisical.com/api
  resyncInterval: 3600
  authentication:
    universalAuth:
      credentialsRef:
        secretName: infiscal-auth-secret
        secretNamespace: external-secrets
      secretsScope:
        projectSlug: homelab-p-iqd # <-- project slug
        envSlug: prod # "dev", "staging", "prod", etc..
        secretsPath: "/Certificates/${SECRET_DOMAIN_DIVING/./-}"
  managedKubeSecretReferences:
    - secretName: ${SECRET_DOMAIN_DIVING/./-}-tls
      secretNamespace: cert-manager
      creationPolicy: "Orphan"
      template:
        includeAllSecrets: true
---
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: ${SECRET_DOMAIN_WIFE/./-}-tls
  labels:
    controller.cert-manager.io/fao: "true"
  annotations:
    cert-manager.io/alt-names: '*.${SECRET_DOMAIN_WIFE},${SECRET_DOMAIN_WIFE}'
    cert-manager.io/certificate-name: "${SECRET_DOMAIN_WIFE/./-}"
    cert-manager.io/common-name: ${SECRET_DOMAIN_WIFE}
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
    secrets.infisical.com/auto-reload: "true"
spec:
  hostAPI: https://app.infisical.com/api
  resyncInterval: 3600
  authentication:
    universalAuth:
      credentialsRef:
        secretName: infiscal-auth-secret
        secretNamespace: external-secrets
      secretsScope:
        projectSlug: homelab-p-iqd # <-- project slug
        envSlug: prod # "dev", "staging", "prod", etc..
        secretsPath: "/Certificates/${SECRET_DOMAIN_WIFE/./-}"
  managedKubeSecretReferences:
    - secretName: ${SECRET_DOMAIN_WIFE/./-}-tls
      secretNamespace: cert-manager
      creationPolicy: "Orphan"
      template:
        includeAllSecrets: true
