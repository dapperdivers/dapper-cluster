---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app archon
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      archon:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          frontend:
            image:
              repository: ghcr.io/dapperdivers/archon-frontend
              tag: latest@sha256:b669a58ebb44fecd69f16010c91f1f089e986188f13edfaba3cac0291b18aa63
            env:
              HOST: "archon.${SECRET_DOMAIN}"
              ARCHON_UI_PORT: &frontendPort 5173
              PORT: *frontendPort
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            probes:
              liveness: &frontendProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *frontendPort
                  initialDelaySeconds: 30
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness: *frontendProbes
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi

          server:
            image:
              repository: ghcr.io/dapperdivers/archon-server
              tag: latest@sha256:3fb1dfe80605a2cdcc7cdf9f5a87937075fdc12cff443ab2258338e79f3f2a48
            env:
              HOST: "0.0.0.0"
              ARCHON_SERVER_PORT: &serverPort 8181
              LOG_LEVEL: "INFO"
            envFrom:
              - secretRef:
                  name: archon-supabase-secret
              - secretRef:
                  name: *app
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            probes:
              liveness: &serverProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *serverPort
                  initialDelaySeconds: 30
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness: *serverProbes
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                cpu: 1000m
                memory: 2Gi

          mcp:
            image:
              repository: ghcr.io/dapperdivers/archon-mcp
              tag: latest@sha256:c0f1ab3bbc9f1381bbeb072e8c1d4f4fdc6631faf575a1e87b094e53b686e040
            env:
              HOST: "0.0.0.0"
              ARCHON_MCP_PORT: &mcpPort 8051
              LOG_LEVEL: "INFO"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            probes:
              liveness: &mcpProbes
                enabled: false
              readiness: *mcpProbes
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 512Mi

          agents:
            image:
              repository: ghcr.io/dapperdivers/archon-agents
              tag: latest@sha256:5b1cbe61fff92b359c6120a8dc17368f8185398864bdc08290d5f6ca35913535
            env:
              HOST: "0.0.0.0"
              ARCHON_AGENTS_PORT: &agentsPort 8052
              LOG_LEVEL: "INFO"
              ARCHON_SERVER_PORT: *serverPort
              ARCHON_MCP_PORT: *mcpPort
            envFrom:
              - secretRef:
                  name: archon-supabase-secret
              - secretRef:
                  name: *app
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            probes:
              liveness: &agentsProbes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *agentsPort
                  initialDelaySeconds: 30
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness: *agentsProbes
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                cpu: 1000m
                memory: 2Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        seccompProfile: { type: RuntimeDefault }

    persistence:
      git-repo:
        type: emptyDir
        globalMounts:
          - path: /git
      data:
        existingClaim: ${APP}
        globalMounts:
          - path: /data

    service:
      app:
        controller: *app
        ports:
          http:
            port: *frontendPort
          server:
            port: *serverPort
          mcp:
            port: *mcpPort
          agents:
            port: *agentsPort

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        className: internal
        hosts:
          - host: &host "archon.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-tls"
