---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app litellm
  namespace: default
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      strategy: rollback
      retries: 5

  values:
    controllers:
      litellm:
        replicas: 1
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom:
              - secretRef:
                  name: litellm-postgres-secret
        containers:
          litellm:
            image:
              repository: ghcr.io/berriai/litellm
              tag: v1.76.1-stable@sha256:222cbb6aa30f3315572a7b3c5ab22407b1e61a11a3ed4334463dbbbfa1a0f742
            ports:
              - containerPort: &port 4000
            env:
              TZ: "${TIME_ZONE}"
              REDIS_URL: redis://dragonfly.database.svc.cluster.local
              STORE_MODEL_IN_DB: True
            envFrom:
              - secretRef:
                  name: litellm-secret
            args:
              - "--config"
              - "/app/config.yaml"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 2
                memory: 830Mi
              limits:
                cpu: 4
                memory: 1Gi
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 150
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities: { drop: ["ALL"] }
      seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: litellm
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        className: internal
        hosts:
          - host:  &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
              - path: /ui
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN/./-}-tls
    persistence:
      config-file:
        type: configMap
        name: litellm-configmap
        globalMounts:
          - path: /app/config.yaml
            subPath: config.yaml
            readOnly: true
