---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr-uhd

spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage
  values:
    controllers:
      sonarr-uhd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              TZ: "${TIME_ZONE}"
              SONARR__APP__INSTANCENAME: 4K Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
              PUSHOVER_APP_URL: &host "4ksonarr.${SECRET_DOMAIN_MEDIA}"
              PUSHOVER_DEBUG: "false"
              PUSHOVER_PRIORITY: "0"
            envFrom:
              - secretRef:
                  name: sonarr-uhd-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - sh
                      - -c
                      - |
                        # Check application health
                        wget -qO- --timeout=5 "http://localhost:80/ping" >/dev/null 2>&1 || exit 1
                        # Check if NFS mount is healthy
                        timeout 5 df /tower >/dev/null 2>&1 || exit 1
                  initialDelaySeconds: 60
                  periodSeconds: 600      # Check every 10 minutes
                  timeoutSeconds: 30
                  failureThreshold: 3     # Restart after 30 minutes of failures
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 250m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 140
        fsGroup: 150
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: sonarr-uhd
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_MEDIA}"
          authentik.home.arpa/internal: "true"
          nginx.ingress.kubernetes.io/auth-signin: "https://4ksonarr.${SECRET_DOMAIN_MEDIA}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN_MEDIA/./-}-tls
    persistence:
      config:
        existingClaim: sonarr-uhd
      tmp:
        type: emptyDir
      safe:
        existingClaim: media-vault-pvc
        globalMounts:
          - path: /safe
      tower:
        existingClaim: media-tower-pvc
        globalMounts:
          - path: /tower
