---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfs-monitor-script
  namespace: media
data:
  monitor.sh: |
    #!/bin/sh

    # NFS Mount Health Monitor
    # This script checks NFS mount health and logs issues

    set -e

    # Configuration
    CHECK_INTERVAL=60  # seconds
    LOG_PREFIX="[NFS-MONITOR]"

    # List of NFS servers to monitor
    NFS_SERVERS="tower.manor tower-2.manor vault.manor"

    # Function to check mount health
    check_mount() {
        local mount_point=$1
        local server=$2

        # Try to access the mount with timeout
        if timeout 5 df "$mount_point" >/dev/null 2>&1; then
            return 0
        else
            return 1
        fi
    }

    # Function to get all NFS mounts for a server
    get_mounts_for_server() {
        local server=$1
        mount | grep "^$server:" | awk '{print $3}'
    }

    # Main monitoring loop
    echo "$LOG_PREFIX Starting NFS mount monitor"
    echo "$LOG_PREFIX Monitoring servers: $NFS_SERVERS"

    while true; do
        for server in $NFS_SERVERS; do
            mounts=$(get_mounts_for_server "$server")

            if [ -z "$mounts" ]; then
                echo "$LOG_PREFIX No mounts found for $server"
                continue
            fi

            for mount in $mounts; do
                if check_mount "$mount" "$server"; then
                    echo "$LOG_PREFIX ✓ Mount healthy: $server:$mount"
                else
                    echo "$LOG_PREFIX ✗ STALE MOUNT DETECTED: $server:$mount"
                    echo "$LOG_PREFIX   Mount point: $mount"
                    echo "$LOG_PREFIX   Server: $server"
                    echo "$LOG_PREFIX   Time: $(date -Iseconds)"

                    # Log additional diagnostics
                    echo "$LOG_PREFIX   Checking server connectivity..."
                    if ping -c 1 -W 2 "$server" >/dev/null 2>&1; then
                        echo "$LOG_PREFIX   Server $server is reachable"
                    else
                        echo "$LOG_PREFIX   Server $server is NOT reachable"
                    fi

                    # Check mount options
                    mount_opts=$(mount | grep "^$server:.*$mount" | sed 's/.*(\(.*\))/\1/')
                    echo "$LOG_PREFIX   Mount options: $mount_opts"
                fi
            done
        done

        sleep $CHECK_INTERVAL
    done
