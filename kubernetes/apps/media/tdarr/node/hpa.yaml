---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/autoscaling/v2/horizontalpodautoscaler.json
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tdarr-node
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tdarr-node
  minReplicas: 1  # Minimum 1 node always running
  maxReplicas: 3  # Maximum 3 nodes (uses 3 GPUs fully)
  metrics:
    # Scale based on CPU utilization
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Scale up when CPU > 70%
    # Scale based on memory utilization
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80  # Scale up when memory > 80%
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 minutes before scaling down
      policies:
        - type: Percent
          value: 50  # Scale down by 50% at a time
          periodSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 60  # Wait 1 minute before scaling up
      policies:
        - type: Percent
          value: 100  # Double the pods when scaling up
          periodSeconds: 60
        - type: Pods
          value: 1  # But add at least 1 pod
          periodSeconds: 60
      selectPolicy: Max  # Use the policy that scales up the most
