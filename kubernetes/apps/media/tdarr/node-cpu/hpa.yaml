---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/autoscaling/v2/horizontalpodautoscaler.json
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tdarr-node-cpu
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tdarr-node-cpu
  minReplicas: 2  # Start with 2 CPU nodes for parallel processing
  maxReplicas: 6  # Maximum 6 CPU nodes (plenty of CPU available)
  metrics:
    # Scale based on CPU utilization
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 40  # Scale up aggressively when CPU > 40%
    # Scale based on memory utilization
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 50  # Scale up aggressively when memory > 50%
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600  # Wait 10 minutes before scaling down
      policies:
        - type: Pods
          value: 1  # Scale down 1 pod at a time
          periodSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 30  # Wait only 30 seconds before scaling up
      policies:
        - type: Pods
          value: 2  # Add up to 2 pods at a time
          periodSeconds: 120
      selectPolicy: Max
