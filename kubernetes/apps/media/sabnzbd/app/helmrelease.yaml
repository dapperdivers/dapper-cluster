---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sabnzbd
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sabnzbd
              tag: 4.5.2@sha256:e3f27e50ee51f950d89ce888cb3c3c4e74b46b42751333ee008f906906cbf05b
            env:
              TZ: ${TIME_ZONE}
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.media,
                sabnzbd.media.svc,
                sabnzbd.media.svc.cluster,
                sabnzbd.media.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN_MEDIA}
              CROSS_SEED_ENABLED: false
              CROSS_SEED_HOST: cross-seed.media.svc.cluster.local
              CROSS_SEED_PORT: 80
              CROSS_SEED_SLEEP_INTERVAL: 30
              PUSHOVER_ENABLED: true
            envFrom:
              - secretRef:
                  name: sabnzbd-secret
            probes:
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 20
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 300
                  timeoutSeconds: 60
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 30
                  timeoutSeconds: 30
                  failureThreshold: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 8000m
              limits:
                memory: 80Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 140
        fsGroup: 150
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values: ["qbittorrent","plex"]
                topologyKey: kubernetes.io/hostname
    service:
      app:
        controller: sabnzbd
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN_MEDIA}
          authentik.home.arpa/internal: "true"
          nginx.ingress.kubernetes.io/auth-signin: "https://sabnzbd.${SECRET_DOMAIN_MEDIA}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_MEDIA}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN_MEDIA/./-}-tls
    persistence:
      config:
        existingClaim: sabnzbd
      tmp:
        medium: Memory
        type: emptyDir
        sizeLimit: 70Gi
        globalMounts:
          - path: /tmp
      scripts:
        type: configMap
        name: sabnzbd-scripts
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      safe:
        type: nfs
        server: vault.manor
        path: /mnt/Tank/Media
        globalMounts:
          - path: /safe/downloads/usenet
            subPath: downloads/usenet
      tower:
        type: nfs
        server: tower.manor
        path: /mnt/user/Media
        globalMounts:
          - path: /tower/downloads/usenet
            subPath: downloads/usenet
      tower-2:
        type: nfs
        server: tower-2.manor
        path: /mnt/user/Media
        globalMounts:
          - path: /tower-2/downloads/usenet
            subPath: downloads/usenet
