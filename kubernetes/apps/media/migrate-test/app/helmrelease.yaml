---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app migrate-test-dryrun
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      migrate-test-dryrun:
        type: job
        annotations:
          reloader.stakater.com/auto: "true"
        job:
          ttlSecondsAfterFinished: 86400  # Keep completed job for 24 hours
          # backoffLimit: 2  # Uncomment to limit retries
        containers:
          app:
            image:
              repository: instrumentisto/rsync-ssh
              tag: latest
            # Keep container alive for manual testing via kubectl exec
            # Comment out the sleep and uncomment rsync for automated runs
            command:
              - /bin/sh
            args:
              - -c
              - "sleep 3600"  # Sleep for 1 hour, allowing kubectl exec sessions

            # Uncomment below for automated rsync execution:
            # command:
            #   - rsync
            # args:
            #   - --archive                    # Preserve permissions, timestamps, etc
            #   - --stats                      # Show transfer statistics
            #   - --info=progress2             # Periodic progress updates (better than --progress)
            #   - --human-readable             # Human-readable sizes in stats
            #   - --whole-file                 # Skip delta algorithm (fast network optimization)
            #   - --no-inc-recursive           # Build full file list upfront (reduces NFS seeks)
            #   - --remove-source-files        # Delete source after successful transfer
            #   - --log-file=/metrics/migration.log
            #   # - --dry-run                  # Uncomment for safe testing
            #   # - --verbose                  # Uncomment for debugging (noisy with many files)
            #   # - --checksum                 # SLOW: only use if you suspect data corruption
            #   - /tower/movies/               # Source: tower.manor:/mnt/user/Media/movies/
            #   - /destination/movies/         # Dest: CephFS /truenas/Media/movies/
            env:
              TZ: ${TIME_ZONE}
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: 2
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false  # Need write access for migration
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 140
        fsGroup: 150
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    persistence:
      nfs-tower:
        existingClaim: media-tower-pvc
        globalMounts:
          - path: /tower
            readOnly: false  # Need write for source deletion
      nfs-tower-2:
        existingClaim: media-tower-2-pvc
        globalMounts:
          - path: /tower-2
            readOnly: false  # Need write for source deletion
      ceph-dest:
        existingClaim: media-cephfs-pvc
        globalMounts:
          - path: /destination
      metrics:
        type: emptyDir
        globalMounts:
          - path: /metrics
