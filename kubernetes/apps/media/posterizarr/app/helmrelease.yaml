# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app posterizarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      posterizarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-config:
            image:
              repository: docker.io/mikefarah/yq
              tag: 4.48.1@sha256:75b3a60dce1fa4641b0f02bdb4465eddc5da95e62028118a292239ca8e3921e5
              pullPolicy: IfNotPresent
            command:
              - "/bin/sh"
            args:
              - "/app/config-file/init-config.sh"
            envFrom:
            - secretRef:
                name: posterizarr-secret
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                memory: 128Mi
        containers:
          app:
            image:
              repository: ghcr.io/fscorrupt/posterizarr
              tag: 2.0.8@sha256:c4e46fcfbd5c4a72e8a653919be2d1388f03a13752b8c50cbdcc0e97d86f9259
            env:
              TZ: ${TIME_ZONE}
            resources:
              requests:
                cpu: 100m
                memory: 4096M
              limits:
                memory: 8192M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                - ALL
    service:
      app:
        controller: posterizarr
        ports:
          http:
            port: &port 8000
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_MEDIA}"
          authentik.home.arpa/internal: "true"
          nginx.ingress.kubernetes.io/auth-signin: "https://posterizarr.${SECRET_DOMAIN_MEDIA}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
        className: internal
        hosts:
          - host: &host "posterizarr.${SECRET_DOMAIN_MEDIA}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN_MEDIA/./-}-tls
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 150
        fsGroup: 150
        supplementalGroups:
          - 140
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        existingClaim: *app
      posterizarr-watcher:
        existingClaim: posterizarr-watcher
        globalMounts:
          - path: /config/watcher
      config-file:
        type: configMap
        defaultMode: 511
        name: posterizarr-configmap
        globalMounts:
          - path: /app/config-file
      assets:
        existingClaim: plex-posters-cephfs
        globalMounts:
        - path: /assets
          subPath: assets
      assetsbackup:
        existingClaim: plex-posters-cephfs
        globalMounts:
          - path: /assetsbackup
            subPath: assetsbackup
      manualassets:
        existingClaim: plex-posters-cephfs
        globalMounts:
          - path: /manualassets
            subPath: manualassets
