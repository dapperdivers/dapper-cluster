# Shared NFS PersistentVolumes for Media Services
# These PVs are mounted by multiple media services for shared access to media files
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: media-vault-pv
  labels:
    storage.type: nfs-media
    storage.server: vault
    storage.tier: primary
spec:
  capacity:
    storage: 100Ti  # Adjust based on actual storage
  accessModes:
    - ReadWriteMany  # Multiple pods can mount simultaneously
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""  # Empty string for static provisioning
  claimRef:
    namespace: media
    name: media-vault-pvc
  nfs:
    server: vault.manor
    path: /mnt/Tank/Media
  mountOptions:
    # Core NFS options
    - hard                    # Retry indefinitely (critical for media streaming)
    - tcp                     # Use TCP protocol
    - vers=4.1                # NFS version 4.1 for vault.manor

    # Large file optimizations (4MB buffers for media files)
    - rsize=4194304           # 4MB read buffer
    - wsize=4194304           # 4MB write buffer

    # Timeout and retry settings
    - timeo=600               # 60 second timeout
    - retrans=2               # Retry 2 times

    # Caching optimizations for media (rarely changes)
    - actimeo=3600            # Cache attributes for 1 hour
    - lookupcache=all         # Cache all lookups

    # Performance optimizations
    - async                   # Asynchronous writes
    - noatime                 # Don't update access times
    - nodiratime              # Don't update directory access times
    - nocto                   # No close-to-open consistency

    # Media-specific optimizations
    - nolock                  # No file locking needed
    - noacl                   # No ACLs needed
    - nordirplus              # Disable READDIRPLUS

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: media-tower-pv
  labels:
    storage.type: nfs-media
    storage.server: tower
    storage.tier: secondary
spec:
  capacity:
    storage: 100Ti  # Adjust based on actual storage
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  claimRef:
    namespace: media
    name: media-tower-pvc
  nfs:
    server: tower.manor
    path: /mnt/user/Media
  mountOptions:
    # Same optimizations but with NFS v4.2
    - hard
    - tcp
    - vers=4.2                # NFS version 4.2 for tower servers
    - rsize=4194304
    - wsize=4194304
    - timeo=600
    - retrans=2
    - actimeo=3600
    - lookupcache=all
    - async
    - noatime
    - nodiratime
    - nocto
    - nolock
    - noacl
    - nordirplus

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: media-tower-2-pv
  labels:
    storage.type: nfs-media
    storage.server: tower-2
    storage.tier: secondary
spec:
  capacity:
    storage: 100Ti  # Adjust based on actual storage
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  claimRef:
    namespace: media
    name: media-tower-2-pvc
  nfs:
    server: tower-2.manor
    path: /mnt/user/Media
  mountOptions:
    - hard
    - tcp
    - vers=4.2
    - rsize=4194304
    - wsize=4194304
    - timeo=600
    - retrans=2
    - actimeo=3600
    - lookupcache=all
    - async
    - noatime
    - nodiratime
    - nocto
    - nolock
    - noacl
    - nordirplus

---
# PersistentVolumeClaims for the above PVs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-vault-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: media-storage
    storage.server: vault
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""  # Empty string for static binding
  volumeName: media-vault-pv
  resources:
    requests:
      storage: 100Ti

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-tower-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: media-storage
    storage.server: tower
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  volumeName: media-tower-pv
  resources:
    requests:
      storage: 100Ti

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-tower-2-pvc
  namespace: media
  labels:
    app.kubernetes.io/name: media-storage
    storage.server: tower-2
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  volumeName: media-tower-2-pv
  resources:
    requests:
      storage: 100Ti
